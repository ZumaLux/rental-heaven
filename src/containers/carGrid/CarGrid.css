.car-grid {
  background-color: rgb(48, 48, 48);
  padding: 1rem;
}

.car-grid__nav {
  display: flex;
  justify-content: flex-end;
  margin: 1rem;
  align-items: center;
  margin: 0;
}

.car-grid__nav {
  width: 100%;
  padding: 1.5rem 0;
}

.car-grid__nav .search-container {
  width: 35%;
  height: 2rem;
  margin: 0 0.5rem;
}

.car-grid__nav .add-btn-container {
  width: 6rem;
  height: 2rem;
  margin: 0 0.5rem;
}
.car-grid__nav .add-btn-container button {
  width: 100%;
  height: 100%;
  border: none;
  border-radius: 1rem;
  cursor: pointer;
  font-family: var(--font-family);
  font-weight: bold;
}

.car-grid__nav .sort-container {
  width: 13rem;
  height: 2rem;
  margin: 0 0.5rem;
}

.car-grid__content {
  /* min-height: 100vh; */
  /* display: grid; */
  /* grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); */
  /* gap: 1rem; */
  /* text-align: center; */
  /* grid-auto-rows: 1fr;  */
  /* justify-content: start; */
  /* max-width: fit-content; */
  /* max-height: fit-content; */

  /* Custom Values */
  --grid-layout-gap: 0.8rem;
  --grid-column-count: 12;
  --grid-item--min-width: 20rem;

  /**
  * Calculated values.
  */
  --gap-count: calc(var(--grid-column-count) - 1);
  --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
  --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));

  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr)
  );
  grid-gap: var(--grid-layout-gap);
  text-align: center;
}

@media screen and (max-width: 820px) {
  .car-grid__nav {
    flex-wrap: wrap;
  }
  .car-grid__nav .search-container {
    width: 100%;
    margin-bottom: 1rem;
  }
  .car-grid__nav .add-btn-container {
    width: 5rem;
  }
  .car-grid__nav .sort-container {
    width: 12rem;
  }
}

@media screen and (max-width: 480px) {
}

/* Galaxy Fold navimized */
@media screen and (max-width: 350px) {
  .car-grid__content {
    --grid-layout-gap: 0.8rem;
    --grid-column-count: 10;
    --grid-item--min-width: 10rem;

    --gap-count: calc(var(--grid-column-count) - 1);
    --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
    --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));

    grid-template-columns: repeat(
      auto-fill,
      minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr)
    );
  }
}
